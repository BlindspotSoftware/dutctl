# Linter selection and configuration file for golangci-lint.
version: "2"
run:
  # Include test files or not.
  # Default: true
  tests: false
linters:
  # Disable all linters. It's important to have reproducible CI: don't start to fail all builds at the same time.
  # With golangci-lint this can happen if you use option --enable-all and a new linter is added
  # or when one upstream linter is upgraded.
  default: none
  # Enable specific linter
  # If linters should be disabled, comment out the respective line with explaination.
  enable:
    - arangolint
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - canonicalheader
    - containedctx
    - contextcheck
    - copyloopvar
    - cyclop
    - decorder
    #- depguard - no package black list needed for now
    - dogsled
    - dupl
    - dupword
    - durationcheck
    - embeddedstructfieldcheck
    #- err113 - enable after refactoring
    - errcheck
    - errchkjson
    - errname
    #- errorlint - enable after refactoring
    #- exhaustive - It's ok not not set every field in a struct
    #- exhaustruct - It's ok not not set every field in a struct
    - exptostd
    - fatcontext
    - forbidigo
    - forcetypeassert
    - funcorder
    - funlen
    - ginkgolinter
    - gocheckcompilerdirectives
    - gochecknoglobals
    #- gochecknoinits - init functions are needed for the plugin system
    - gochecksumtype
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godoclint
    - godot
    #- godox - allow "TODO" and "FIXME" comments until v1.0
    - goheader
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - gosmopolitan
    - govet
    - grouper
    - iface
    - importas
    - inamedparam
    - ineffassign
    - interfacebloat
    - intrange
    - iotamixing
    - ireturn
    - lll
    - loggercheck
    - maintidx
    - makezero
    - mirror
    - misspell
    - mnd
    #- musttag - Not all fields need to be tagged for YAML parsing, as the default way of assigning is fine.
    - nakedret
    - nestif
    - nilerr
    - nilnesserr
    - nilnil
    - nlreturn
    - noctx
    - noinlineerr
    - nolintlint
    - nonamedreturns
    - nosprintfhostport
    #- paralleltest - Not necessary to do parallel tests for now, might enable later again
    #- perfsprint - Using fmt.Sprintf is fine, performance is not an issue.
    - prealloc
    - predeclared
    - promlinter
    - protogetter
    - reassign
    - recvcheck
    - revive
    - rowserrcheck
    - sloglint
    - spancheck
    - sqlclosecheck
    - staticcheck
    - tagalign
    - tagliatelle
    - testableexamples
    - testifylint
    #- testpackage - We don't enforce white box testing
    - thelper
    - tparallel
    - unconvert
    - unparam
    - unqueryvet
    - unused
    - usestdlibvars
    - usetesting
    - varnamelen
    - wastedassign
    - whitespace
    #- wrapcheck - Not ALL error should be wrapped, as they become part of the function API then.
    - wsl_v5
    - zerologlint
  settings:
    ireturn:
      # List of interfaces to allow.
      # Lists of the keywords and regular expressions matched to interface or package names can be used.
      # `allow` and `reject` settings cannot be used at the same time.
      #
      # Keywords:
      # - `empty` for `interface{}`
      # - `error` for errors
      # - `stdlib` for standard library
      # - `anon` for anonymous interfaces
      # - `generic` for generic interfaces added in go 1.18
      #
      # Default: [anon, error, empty, stdlib]
      allow:
        - anon
        - error
        - empty
        - stdlib
        - generic
        - Module
        - gpio
    lll:
      line-length: 140
    nestif:
      min-complexity: 6
    varnamelen:
      max-distance: 6
      ignore-names:
        - err
        - wg
        - s
        - ch
        - tt
        - r
        - fs
        - "on"
      ignore-type-assert-ok: true
      ignore-map-index-ok: true
      ignore-chan-recv-ok: true
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    paths:
      - third_party$
      - builtin$
      - examples$

formatters:
  enable:
    - gci
    - gofmt
    - goimports
  settings:
    gci:
      # Section configuration to compare against.
      # Section names are case-insensitive and may contain parameters in ().
      # The default order of sections is `standard > default > custom > blank > dot > alias > localmodule`,
      # If `custom-order` is `true`, it follows the order of `sections` option.
      # Default: ["standard", "default"]
      sections:
        - standard # Standard section: captures all standard packages.
        - default # Default section: contains all imports that could not be matched to another section type.
        - blank # Blank section: contains all blank imports. This section is not present unless explicitly enabled.
        - alias # Alias section: contains all alias imports. This section is not present unless explicitly enabled.
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
